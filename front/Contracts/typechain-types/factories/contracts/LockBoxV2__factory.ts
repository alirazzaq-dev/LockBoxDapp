/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LockBoxV2, LockBoxV2Interface } from "../../contracts/LockBoxV2";

const _abi = [
  {
    inputs: [],
    name: "LockBox__EXPIRED",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__EXPIRY_LIMIT_EXCEEDING",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__INSUFFICIENT_FUNDS",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__INSUFFICIENT_FUNDS_FOR_SWAP",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__INSUFFICIENT_LOCKING_FUNDS",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__NOT_ALLOWED",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__NOT_AVAILABLE",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__NOT_PENDING_ANYMORE",
    type: "error",
  },
  {
    inputs: [],
    name: "LockBox__OUT_OF_BOUND_REQUEST",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "cancelLockBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LockBoxV2.AssetType",
        name: "assetAtype",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "assetAaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetAID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetAQuantity",
        type: "uint256",
      },
      {
        internalType: "enum LockBoxV2.AssetType",
        name: "assetBtype",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "assetBaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetBID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetBQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
    ],
    name: "createLockBox",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLockBoxCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLockBoxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "getLockBoxInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "boxId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "enum LockBoxV2.Status",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum LockBoxV2.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "assetAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetID",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct LockBoxV2.Asset",
            name: "assetA",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum LockBoxV2.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "assetAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetID",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct LockBoxV2.Asset",
            name: "assetB",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "claimedBy",
            type: "address",
          },
        ],
        internalType: "struct LockBoxV2.LockBoxInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getLockBoxesInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "boxId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiryTime",
            type: "uint256",
          },
          {
            internalType: "enum LockBoxV2.Status",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum LockBoxV2.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "assetAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetID",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct LockBoxV2.Asset",
            name: "assetA",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum LockBoxV2.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "assetAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetID",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct LockBoxV2.Asset",
            name: "assetB",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "claimedBy",
            type: "address",
          },
        ],
        internalType: "struct LockBoxV2.LockBoxInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boxId",
        type: "uint256",
      },
    ],
    name: "swapAssets",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "updateBoxFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405262015180600155662386f26fc1000060035534801561002257600080fd5b5061002c33610031565b610081565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611ea2806100906000396000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063e18ec21811610059578063e18ec218146102b0578063f23a6e61146102d0578063f2fde38b146102fc578063ffbdbb111461031c57600080fd5b80638da5cb5b1461020f578063bad1d5d214610237578063bc197c8114610264578063d3f29c331461029057600080fd5b8063403ba10c116100c6578063403ba10c146101a757806363828752146101d4578063715018a6146101e75780638a88cbbe146101fc57600080fd5b806301ffc9a7146100f8578063150b7a021461012d57806316d19b4f1461017157806324600fc314610190575b600080fd5b34801561010457600080fd5b5061011861011336600461184c565b610331565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610158610148366004611950565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610124565b34801561017d57600080fd5b506002545b604051908152602001610124565b34801561019c57600080fd5b506101a5610368565b005b3480156101b357600080fd5b506101c76101c23660046119b8565b6103f2565b6040516101249190611ab7565b6101a56101e2366004611b06565b610664565b3480156101f357600080fd5b506101a5610c5e565b6101a561020a366004611b2e565b610c72565b34801561021b57600080fd5b506000546040516001600160a01b039091168152602001610124565b34801561024357600080fd5b50610257610252366004611b06565b6110b0565b6040516101249190611bb3565b34801561027057600080fd5b5061015861027f366004611c42565b63bc197c8160e01b95945050505050565b34801561029c57600080fd5b506101a56102ab366004611b06565b611245565b3480156102bc57600080fd5b506101a56102cb366004611b06565b61168c565b3480156102dc57600080fd5b506101586102eb366004611cec565b63f23a6e6160e01b95945050505050565b34801561030857600080fd5b506101a5610317366004611d51565b611699565b34801561032857600080fd5b50600354610182565b60006001600160e01b03198216630271189760e51b148061036257506301ffc9a760e01b6001600160e01b03198316145b92915050565b610370611712565b47806103b55760405162461bcd60e51b815260206004820152600f60248201526e42616c616e6365206973207a65726f60881b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156103ee573d6000803e3d6000fd5b5050565b606060025483111561041757604051630a2b22e360e31b815260040160405180910390fd5b82821115610423578291505b600061042f8385611d82565b90506000808467ffffffffffffffff81111561044d5761044d611899565b60405190808252806020026020018201604052801561048657816020015b6104736117bc565b81526020019060019003908161046b5790505b509050855b8381111561065a57600081815260046020908152604091829020825160e0810184528154815260018201546001600160a01b031692810192909252600281015492820192909252600380830154919291606084019160ff909116908111156104f5576104f56119da565b6003811115610506576105066119da565b81526040805160808101909152600483018054602090930192829060ff166003811115610535576105356119da565b6003811115610546576105466119da565b81526020016000820160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820154815250508152602001600782016040518060800160405290816000820160009054906101000a900460ff1660038111156105c5576105c56119da565b60038111156105d6576105d66119da565b815281546001600160a01b03610100909104811660208084019190915260018401546040840152600290930154606090920191909152918352600a939093015416910152825183908590811061062e5761062e611d95565b6020026020010181905250828061064490611dab565b935050808061065290611dc4565b91505061048b565b5095945050505050565b6000818152600460209081526040808320815160e0810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600380820154606084019160ff909116908111156106c2576106c26119da565b60038111156106d3576106d36119da565b81526040805160808101909152600483018054602090930192829060ff166003811115610702576107026119da565b6003811115610713576107136119da565b81526020016000820160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820154815250508152602001600782016040518060800160405290816000820160009054906101000a900460ff166003811115610792576107926119da565b60038111156107a3576107a36119da565b815281546001600160a01b0361010090910481166020808401919091526001840154604080850191909152600290940154606090930192909252928452600a94909401549091169190920152608082015160a0830151918301519293509142106108205760405163bdef925160e01b815260040160405180910390fd5b600083606001516003811115610838576108386119da565b14610856576040516318dcd75160e01b815260040160405180910390fd5b60008151600381111561086b5761086b6119da565b036108e35780602001516001600160a01b03166323b872dd33856020015184604001516040518463ffffffff1660e01b81526004016108ac93929190611ddb565b600060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b50505050610a60565b6003815160038111156108f8576108f86119da565b0361093f5780602001516001600160a01b031663f242432a338560200151846040015185606001516040518563ffffffff1660e01b81526004016108ac9493929190611dff565b600181516003811115610954576109546119da565b036109de576020808201519084015160608301516040516323b872dd60e01b81526001600160a01b03909316926323b872dd92610995923392600401611ddb565b6020604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190611e37565b50610a60565b6002815160038111156109f3576109f36119da565b03610a60578060600151341015610a1d5760405163dc5ddc2560e01b815260040160405180910390fd5b82602001516001600160a01b03166108fc82606001519081150290604051600060405180830381858888f19350505050158015610a5e573d6000803e3d6000fd5b505b600082516003811115610a7557610a756119da565b03610ae95781602001516001600160a01b03166323b872dd303385604001516040518463ffffffff1660e01b8152600401610ab293929190611ddb565b600060405180830381600087803b158015610acc57600080fd5b505af1158015610ae0573d6000803e3d6000fd5b50505050610c29565b600382516003811115610afe57610afe6119da565b03610b415781602001516001600160a01b031663f242432a3033856040015186606001516040518563ffffffff1660e01b8152600401610ab29493929190611dff565b600182516003811115610b5657610b566119da565b03610bdd57602082015160608301516040516323b872dd60e01b81526001600160a01b03909216916323b872dd91610b949130913391600401611ddb565b6020604051808303816000875af1158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190611e37565b50610c29565b600282516003811115610bf257610bf26119da565b03610c29576060820151604051339180156108fc02916000818181858888f19350505050158015610c27573d6000803e3d6000fd5b505b5050506000908152600460205260409020600a810180546001600160a01b03191633179055600301805460ff19166001179055565b610c66611712565b610c70600061176c565b565b600354341015610c955760405163154b71ff60e21b815260040160405180910390fd5b600154811115610cb85760405163db68f95560e01b815260040160405180910390fd5b6000896003811115610ccc57610ccc6119da565b03610d38576040516323b872dd60e01b81526001600160a01b038916906323b872dd90610d0190339030908c90600401611ddb565b600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b50505050610e5b565b6003896003811115610d4c57610d4c6119da565b03610d8357604051637921219560e11b81526001600160a01b0389169063f242432a90610d0190339030908c908c90600401611dff565b6001896003811115610d9757610d976119da565b03610e15576040516323b872dd60e01b81526001600160a01b038916906323b872dd90610dcc90339030908b90600401611ddb565b6020604051808303816000875af1158015610deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0f9190611e37565b50610e5b565b6002896003811115610e2957610e296119da565b03610e5b57600354610e3b9087611e59565b341015610e5b57604051636f8abb2160e11b815260040160405180910390fd5b600060405180608001604052808b6003811115610e7a57610e7a6119da565b81526020018a6001600160a01b0316815260200189815260200188815250905060006040518060800160405280886003811115610eb957610eb96119da565b8152602001876001600160a01b031681526020018681526020018581525090506000600260008154610eea90611dab565b91829055506040805160e081018252828152336020820152919250600091908101610f158742611e59565b81526000602080830182905260408084018990526060808501899052608090940183905286835260048252918290208451815590840151600180830180546001600160a01b0319166001600160a01b0390931692909217909155918401516002820155918301516003808401805495965086959293909260ff1916918490811115610fa257610fa26119da565b021790555060808201518051600483018054909190829060ff19166001836003811115610fd157610fd16119da565b0217905550602082015181546001600160a01b0390911661010002610100600160a81b0319909116178155604082015160018083019190915560609092015160029091015560a0830151805160078401805492939092839160ff1990911690836003811115611042576110426119da565b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316021782556040830151600183015560609092015160029091015560c09290920151600a9190910180546001600160a01b0319169190921617905550505050505050505050505050565b6110b86117bc565b600082815260046020908152604091829020825160e0810184528154815260018201546001600160a01b031692810192909252600281015492820192909252600380830154919291606084019160ff9091169081111561111a5761111a6119da565b600381111561112b5761112b6119da565b81526040805160808101909152600483018054602090930192829060ff16600381111561115a5761115a6119da565b600381111561116b5761116b6119da565b81526020016000820160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820154815250508152602001600782016040518060800160405290816000820160009054906101000a900460ff1660038111156111ea576111ea6119da565b60038111156111fb576111fb6119da565b815281546001600160a01b03610100909104811660208084019190915260018401546040840152600290930154606090920191909152918352600a93909301541691015292915050565b6000818152600460209081526040808320815160e0810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600380820154606084019160ff909116908111156112a3576112a36119da565b60038111156112b4576112b46119da565b81526040805160808101909152600483018054602090930192829060ff1660038111156112e3576112e36119da565b60038111156112f4576112f46119da565b81526020016000820160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600182015481526020016002820154815250508152602001600782016040518060800160405290816000820160009054906101000a900460ff166003811115611373576113736119da565b6003811115611384576113846119da565b8152815461010090046001600160a01b0390811660208084019190915260018401546040840152600290930154606090920191909152918352600a9390930154811691830191909152608083015191830151929350909116331461142a5760405162461bcd60e51b815260206004820152601a60248201527f416c726561647920636c61696d656420627920736f6d656f6e6500000000000060448201526064016103ac565b60c08201516001600160a01b0316156114855760405162461bcd60e51b815260206004820152601a60248201527f416c726561647920636c61696d656420627920736f6d656f6e6500000000000060448201526064016103ac565b60008151600381111561149a5761149a6119da565b036115125780602001516001600160a01b03166323b872dd30846020015184604001516040518463ffffffff1660e01b81526004016114db93929190611ddb565b600060405180830381600087803b1580156114f557600080fd5b505af1158015611509573d6000803e3d6000fd5b5050505061166a565b600381516003811115611527576115276119da565b0361156e5780602001516001600160a01b031663f242432a308460200151846040015185606001516040518563ffffffff1660e01b81526004016114db9493929190611dff565b600181516003811115611583576115836119da565b0361160d576020808201519083015160608301516040516323b872dd60e01b81526001600160a01b03909316926323b872dd926115c4923092600401611ddb565b6020604051808303816000875af11580156115e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116079190611e37565b5061166a565b600281516003811115611622576116226119da565b0361166a5781602001516001600160a01b03166108fc82606001519081150290604051600060405180830381858888f19350505050158015611668573d6000803e3d6000fd5b505b505060009081526004602052604090206003908101805460ff19169091179055565b611694611712565b600355565b6116a1611712565b6001600160a01b0381166117065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ac565b61170f8161176c565b50565b6000546001600160a01b03163314610c705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ac565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160e08101825260008082526020820181905291810182905290606082019081526020016118186040805160808101909152806000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152600060209091015290565b60006020828403121561185e57600080fd5b81356001600160e01b03198116811461187657600080fd5b9392505050565b80356001600160a01b038116811461189457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118d8576118d8611899565b604052919050565b600082601f8301126118f157600080fd5b813567ffffffffffffffff81111561190b5761190b611899565b61191e601f8201601f19166020016118af565b81815284602083860101111561193357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561196657600080fd5b61196f8561187d565b935061197d6020860161187d565b925060408501359150606085013567ffffffffffffffff8111156119a057600080fd5b6119ac878288016118e0565b91505092959194509250565b600080604083850312156119cb57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6004811061170f57634e487b7160e01b600052602160045260246000fd5b8051611a19816119f0565b82526020818101516001600160a01b03169083015260408082015190830152606090810151910152565b80518252602081015160018060a01b0380821660208501526040830151604085015260608301519150611a75826119f0565b81606085015260808301519150611a8f6080850183611a0e565b60a08301519150611aa4610100850183611a0e565b8060c08401511661018085015250505050565b6020808252825182820181905260009190848201906040850190845b81811015611afa57611ae6838551611a43565b928401926101a09290920191600101611ad3565b50909695505050505050565b600060208284031215611b1857600080fd5b5035919050565b80356004811061189457600080fd5b60008060008060008060008060006101208a8c031215611b4d57600080fd5b611b568a611b1f565b9850611b6460208b0161187d565b975060408a0135965060608a01359550611b8060808b01611b1f565b9450611b8e60a08b0161187d565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b6101a081016103628284611a43565b600082601f830112611bd357600080fd5b8135602067ffffffffffffffff821115611bef57611bef611899565b8160051b611bfe8282016118af565b9283528481018201928281019087851115611c1857600080fd5b83870192505b84831015611c3757823582529183019190830190611c1e565b979650505050505050565b600080600080600060a08688031215611c5a57600080fd5b611c638661187d565b9450611c716020870161187d565b9350604086013567ffffffffffffffff80821115611c8e57600080fd5b611c9a89838a01611bc2565b94506060880135915080821115611cb057600080fd5b611cbc89838a01611bc2565b93506080880135915080821115611cd257600080fd5b50611cdf888289016118e0565b9150509295509295909350565b600080600080600060a08688031215611d0457600080fd5b611d0d8661187d565b9450611d1b6020870161187d565b93506040860135925060608601359150608086013567ffffffffffffffff811115611d4557600080fd5b611cdf888289016118e0565b600060208284031215611d6357600080fd5b6118768261187d565b634e487b7160e01b600052601160045260246000fd5b8181038181111561036257610362611d6c565b634e487b7160e01b600052603260045260246000fd5b600060018201611dbd57611dbd611d6c565b5060010190565b600081611dd357611dd3611d6c565b506000190190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b600060208284031215611e4957600080fd5b8151801515811461187657600080fd5b8082018082111561036257610362611d6c56fea264697066735822122000fd7ad68b4803252dd96f295bd470d03e3cbb5466312a7e198fdda3fe229f7d64736f6c63430008120033";

type LockBoxV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockBoxV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockBoxV2__factory extends ContractFactory {
  constructor(...args: LockBoxV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LockBoxV2> {
    return super.deploy(overrides || {}) as Promise<LockBoxV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LockBoxV2 {
    return super.attach(address) as LockBoxV2;
  }
  override connect(signer: Signer): LockBoxV2__factory {
    return super.connect(signer) as LockBoxV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockBoxV2Interface {
    return new utils.Interface(_abi) as LockBoxV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockBoxV2 {
    return new Contract(address, _abi, signerOrProvider) as LockBoxV2;
  }
}
