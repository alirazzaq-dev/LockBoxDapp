/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestERC1155,
  TestERC1155Interface,
} from "../../../contracts/TestERC1155.sol/TestERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806060016040528060278152602001620016b46027913962000037816200003e565b50620001c1565b60026200004c8282620000f5565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200007b57607f821691505b6020821081036200009c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000f057600081815260208120601f850160051c81016020861015620000cb5750805b601f850160051c820191505b81811015620000ec57828155600101620000d7565b5050505b505050565b81516001600160401b0381111562000111576200011162000050565b620001298162000122845462000066565b84620000a2565b602080601f831160018114620001615760008415620001485750858301515b600019600386901b1c1916600185901b178555620000ec565b600085815260208120601f198616915b82811015620001925788860151825594840194600190910190840162000171565b5085821015620001b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114e380620001d16000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d6146101155780634e1273f414610128578063a22cb46514610148578063e985e9c51461015b578063f242432a1461019757600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e05780631b2ef1ca14610100575b600080fd5b6100aa6100a5366004610c84565b6101aa565b6040519081526020015b60405180910390f35b6100d06100cb366004610cc7565b610243565b60405190151581526020016100b4565b6100f36100ee366004610ceb565b610293565b6040516100b49190610d4a565b61011361010e366004610d5d565b610327565b005b610113610123366004610ecb565b610346565b61013b610136366004610f75565b610392565b6040516100b4919061107b565b61011361015636600461108e565b6104bc565b6100d06101693660046110ca565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101136101a53660046110fd565b6104c7565b60006001600160a01b03831661021a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061027457506001600160e01b031982166303a24d0760e21b145b8061023d57506301ffc9a760e01b6001600160e01b031983161461023d565b6060600280546102a290611162565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611162565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b50505050509050919050565b6103423383836040518060200160405280600081525061050c565b5050565b6001600160a01b03851633148061036257506103628533610169565b61037e5760405162461bcd60e51b81526004016102119061119c565b61038b8585858585610620565b5050505050565b606081518351146103f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610211565b6000835167ffffffffffffffff81111561041357610413610d7f565b60405190808252806020026020018201604052801561043c578160200160208202803683370190505b50905060005b84518110156104b457610487858281518110610460576104606111ea565b602002602001015185838151811061047a5761047a6111ea565b60200260200101516101aa565b828281518110610499576104996111ea565b60209081029190910101526104ad81611216565b9050610442565b509392505050565b6103423383836107fd565b6001600160a01b0385163314806104e357506104e38533610169565b6104ff5760405162461bcd60e51b81526004016102119061119c565b61038b85858585856108dd565b6001600160a01b03841661056c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610211565b33600061057885610a07565b9050600061058585610a07565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906105b790849061122f565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461061783600089898989610a52565b50505050505050565b81518351146106825760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610211565b6001600160a01b0384166106a85760405162461bcd60e51b815260040161021190611242565b3360005b845181101561078f5760008582815181106106c9576106c96111ea565b6020026020010151905060008583815181106106e7576106e76111ea565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107375760405162461bcd60e51b815260040161021190611287565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061077490849061122f565b925050819055505050508061078890611216565b90506106ac565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107df9291906112d1565b60405180910390a46107f5818787878787610bad565b505050505050565b816001600160a01b0316836001600160a01b0316036108705760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610211565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109035760405162461bcd60e51b815260040161021190611242565b33600061090f85610a07565b9050600061091c85610a07565b90506000868152602081815260408083206001600160a01b038c1684529091529020548581101561095f5760405162461bcd60e51b815260040161021190611287565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061099c90849061122f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109fc848a8a8a8a8a610a52565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a4157610a416111ea565b602090810291909101015292915050565b6001600160a01b0384163b156107f55760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a9690899089908890889088906004016112ff565b6020604051808303816000875af1925050508015610ad1575060408051601f3d908101601f19168201909252610ace91810190611344565b60015b610b7d57610add611361565b806308c379a003610b165750610af161137d565b80610afc5750610b18565b8060405162461bcd60e51b81526004016102119190610d4a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610211565b6001600160e01b0319811663f23a6e6160e01b146106175760405162461bcd60e51b815260040161021190611407565b6001600160a01b0384163b156107f55760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bf1908990899088908890889060040161144f565b6020604051808303816000875af1925050508015610c2c575060408051601f3d908101601f19168201909252610c2991810190611344565b60015b610c3857610add611361565b6001600160e01b0319811663bc197c8160e01b146106175760405162461bcd60e51b815260040161021190611407565b80356001600160a01b0381168114610c7f57600080fd5b919050565b60008060408385031215610c9757600080fd5b610ca083610c68565b946020939093013593505050565b6001600160e01b031981168114610cc457600080fd5b50565b600060208284031215610cd957600080fd5b8135610ce481610cae565b9392505050565b600060208284031215610cfd57600080fd5b5035919050565b6000815180845260005b81811015610d2a57602081850181015186830182015201610d0e565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ce46020830184610d04565b60008060408385031215610d7057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610dbb57610dbb610d7f565b6040525050565b600067ffffffffffffffff821115610ddc57610ddc610d7f565b5060051b60200190565b600082601f830112610df757600080fd5b81356020610e0482610dc2565b604051610e118282610d95565b83815260059390931b8501820192828101915086841115610e3157600080fd5b8286015b84811015610e4c5780358352918301918301610e35565b509695505050505050565b600082601f830112610e6857600080fd5b813567ffffffffffffffff811115610e8257610e82610d7f565b604051610e99601f8301601f191660200182610d95565b818152846020838601011115610eae57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610ee357600080fd5b610eec86610c68565b9450610efa60208701610c68565b9350604086013567ffffffffffffffff80821115610f1757600080fd5b610f2389838a01610de6565b94506060880135915080821115610f3957600080fd5b610f4589838a01610de6565b93506080880135915080821115610f5b57600080fd5b50610f6888828901610e57565b9150509295509295909350565b60008060408385031215610f8857600080fd5b823567ffffffffffffffff80821115610fa057600080fd5b818501915085601f830112610fb457600080fd5b81356020610fc182610dc2565b604051610fce8282610d95565b83815260059390931b8501820192828101915089841115610fee57600080fd5b948201945b838610156110135761100486610c68565b82529482019490820190610ff3565b9650508601359250508082111561102957600080fd5b5061103685828601610de6565b9150509250929050565b600081518084526020808501945080840160005b8381101561107057815187529582019590820190600101611054565b509495945050505050565b602081526000610ce46020830184611040565b600080604083850312156110a157600080fd5b6110aa83610c68565b9150602083013580151581146110bf57600080fd5b809150509250929050565b600080604083850312156110dd57600080fd5b6110e683610c68565b91506110f460208401610c68565b90509250929050565b600080600080600060a0868803121561111557600080fd5b61111e86610c68565b945061112c60208701610c68565b93506040860135925060608601359150608086013567ffffffffffffffff81111561115657600080fd5b610f6888828901610e57565b600181811c9082168061117657607f821691505b60208210810361119657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161122857611228611200565b5060010190565b8082018082111561023d5761023d611200565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006112e46040830185611040565b82810360208401526112f68185611040565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061133990830184610d04565b979650505050505050565b60006020828403121561135657600080fd5b8151610ce481610cae565b600060033d111561137a5760046000803e5060005160e01c5b90565b600060443d101561138b5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113bb57505050505090565b82850191508151818111156113d35750505050505090565b843d87010160208285010111156113ed5750505050505090565b6113fc60208286010187610d95565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061147b90830186611040565b828103606084015261148d8186611040565b905082810360808401526114a18185610d04565b9897505050505050505056fea2646970667358221220d55d60b35c572b9b9909211fca02bc645fef821e8d10a35ae2bd1188f0d7b7b664736f6c6343000812003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e";

type TestERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC1155__factory extends ContractFactory {
  constructor(...args: TestERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC1155> {
    return super.deploy(overrides || {}) as Promise<TestERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC1155 {
    return super.attach(address) as TestERC1155;
  }
  override connect(signer: Signer): TestERC1155__factory {
    return super.connect(signer) as TestERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1155Interface {
    return new utils.Interface(_abi) as TestERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC1155 {
    return new Contract(address, _abi, signerOrProvider) as TestERC1155;
  }
}
